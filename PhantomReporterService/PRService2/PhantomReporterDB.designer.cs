#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PRService2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PhantomReporterDB")]
	public partial class PhantomReporterDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCrimeHistory(CrimeHistory instance);
    partial void UpdateCrimeHistory(CrimeHistory instance);
    partial void DeleteCrimeHistory(CrimeHistory instance);
    partial void InsertCrimeComment(CrimeComment instance);
    partial void UpdateCrimeComment(CrimeComment instance);
    partial void DeleteCrimeComment(CrimeComment instance);
    partial void InsertCrimeTag(CrimeTag instance);
    partial void UpdateCrimeTag(CrimeTag instance);
    partial void DeleteCrimeTag(CrimeTag instance);
    #endregion
		
		public PhantomReporterDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PhantomReporterDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PhantomReporterDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PhantomReporterDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PhantomReporterDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PhantomReporterDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CrimeHistory> CrimeHistory
		{
			get
			{
				return this.GetTable<CrimeHistory>();
			}
		}
		
		public System.Data.Linq.Table<CrimeComment> CrimeComment
		{
			get
			{
				return this.GetTable<CrimeComment>();
			}
		}
		
		public System.Data.Linq.Table<CrimeTag> CrimeTag
		{
			get
			{
				return this.GetTable<CrimeTag>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CrimeHistory")]
	public partial class CrimeHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Suburb;
		
		private int _Homicide;
		
		private int _Assault;
		
		private int _Sexual_assault;
		
		private int _Offences_against_a_person;
		
		private int _Burglary;
		
		private int _Robbery;
		
		private int _Motor_vehicle_theft;
		
		private int _Property_damage;
		
		private int _Other_offences;
		
		private int _Traffic_Infringement_Notices;
		
		private int _Theft__excluding_Motor_Vehicles_;
		
		private int _Road_fatality;
		
		private int _Road_collision_with_injury;
		
		private string _Quarter;
		
		private string _Region;
		
		private int _ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSuburbChanging(string value);
    partial void OnSuburbChanged();
    partial void OnHomicideChanging(int value);
    partial void OnHomicideChanged();
    partial void OnAssaultChanging(int value);
    partial void OnAssaultChanged();
    partial void OnSexual_assaultChanging(int value);
    partial void OnSexual_assaultChanged();
    partial void OnOffences_against_a_personChanging(int value);
    partial void OnOffences_against_a_personChanged();
    partial void OnBurglaryChanging(int value);
    partial void OnBurglaryChanged();
    partial void OnRobberyChanging(int value);
    partial void OnRobberyChanged();
    partial void OnMotor_vehicle_theftChanging(int value);
    partial void OnMotor_vehicle_theftChanged();
    partial void OnProperty_damageChanging(int value);
    partial void OnProperty_damageChanged();
    partial void OnOther_offencesChanging(int value);
    partial void OnOther_offencesChanged();
    partial void OnTraffic_Infringement_NoticesChanging(int value);
    partial void OnTraffic_Infringement_NoticesChanged();
    partial void OnTheft__excluding_Motor_Vehicles_Changing(int value);
    partial void OnTheft__excluding_Motor_Vehicles_Changed();
    partial void OnRoad_fatalityChanging(int value);
    partial void OnRoad_fatalityChanged();
    partial void OnRoad_collision_with_injuryChanging(int value);
    partial void OnRoad_collision_with_injuryChanged();
    partial void OnQuarterChanging(string value);
    partial void OnQuarterChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public CrimeHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suburb", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Suburb
		{
			get
			{
				return this._Suburb;
			}
			set
			{
				if ((this._Suburb != value))
				{
					this.OnSuburbChanging(value);
					this.SendPropertyChanging();
					this._Suburb = value;
					this.SendPropertyChanged("Suburb");
					this.OnSuburbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Homicide", DbType="Int NOT NULL")]
		public int Homicide
		{
			get
			{
				return this._Homicide;
			}
			set
			{
				if ((this._Homicide != value))
				{
					this.OnHomicideChanging(value);
					this.SendPropertyChanging();
					this._Homicide = value;
					this.SendPropertyChanged("Homicide");
					this.OnHomicideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assault", DbType="Int NOT NULL")]
		public int Assault
		{
			get
			{
				return this._Assault;
			}
			set
			{
				if ((this._Assault != value))
				{
					this.OnAssaultChanging(value);
					this.SendPropertyChanging();
					this._Assault = value;
					this.SendPropertyChanged("Assault");
					this.OnAssaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Sexual assault]", Storage="_Sexual_assault", DbType="Int NOT NULL")]
		public int Sexual_assault
		{
			get
			{
				return this._Sexual_assault;
			}
			set
			{
				if ((this._Sexual_assault != value))
				{
					this.OnSexual_assaultChanging(value);
					this.SendPropertyChanging();
					this._Sexual_assault = value;
					this.SendPropertyChanged("Sexual_assault");
					this.OnSexual_assaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Offences against a person]", Storage="_Offences_against_a_person", DbType="Int NOT NULL")]
		public int Offences_against_a_person
		{
			get
			{
				return this._Offences_against_a_person;
			}
			set
			{
				if ((this._Offences_against_a_person != value))
				{
					this.OnOffences_against_a_personChanging(value);
					this.SendPropertyChanging();
					this._Offences_against_a_person = value;
					this.SendPropertyChanged("Offences_against_a_person");
					this.OnOffences_against_a_personChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Burglary", DbType="Int NOT NULL")]
		public int Burglary
		{
			get
			{
				return this._Burglary;
			}
			set
			{
				if ((this._Burglary != value))
				{
					this.OnBurglaryChanging(value);
					this.SendPropertyChanging();
					this._Burglary = value;
					this.SendPropertyChanged("Burglary");
					this.OnBurglaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Robbery", DbType="Int NOT NULL")]
		public int Robbery
		{
			get
			{
				return this._Robbery;
			}
			set
			{
				if ((this._Robbery != value))
				{
					this.OnRobberyChanging(value);
					this.SendPropertyChanging();
					this._Robbery = value;
					this.SendPropertyChanged("Robbery");
					this.OnRobberyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Motor vehicle theft]", Storage="_Motor_vehicle_theft", DbType="Int NOT NULL")]
		public int Motor_vehicle_theft
		{
			get
			{
				return this._Motor_vehicle_theft;
			}
			set
			{
				if ((this._Motor_vehicle_theft != value))
				{
					this.OnMotor_vehicle_theftChanging(value);
					this.SendPropertyChanging();
					this._Motor_vehicle_theft = value;
					this.SendPropertyChanged("Motor_vehicle_theft");
					this.OnMotor_vehicle_theftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Property damage]", Storage="_Property_damage", DbType="Int NOT NULL")]
		public int Property_damage
		{
			get
			{
				return this._Property_damage;
			}
			set
			{
				if ((this._Property_damage != value))
				{
					this.OnProperty_damageChanging(value);
					this.SendPropertyChanging();
					this._Property_damage = value;
					this.SendPropertyChanged("Property_damage");
					this.OnProperty_damageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Other offences]", Storage="_Other_offences", DbType="Int NOT NULL")]
		public int Other_offences
		{
			get
			{
				return this._Other_offences;
			}
			set
			{
				if ((this._Other_offences != value))
				{
					this.OnOther_offencesChanging(value);
					this.SendPropertyChanging();
					this._Other_offences = value;
					this.SendPropertyChanged("Other_offences");
					this.OnOther_offencesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Traffic Infringement Notices]", Storage="_Traffic_Infringement_Notices", DbType="Int NOT NULL")]
		public int Traffic_Infringement_Notices
		{
			get
			{
				return this._Traffic_Infringement_Notices;
			}
			set
			{
				if ((this._Traffic_Infringement_Notices != value))
				{
					this.OnTraffic_Infringement_NoticesChanging(value);
					this.SendPropertyChanging();
					this._Traffic_Infringement_Notices = value;
					this.SendPropertyChanged("Traffic_Infringement_Notices");
					this.OnTraffic_Infringement_NoticesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Theft (excluding Motor Vehicles)]", Storage="_Theft__excluding_Motor_Vehicles_", DbType="Int NOT NULL")]
		public int Theft__excluding_Motor_Vehicles_
		{
			get
			{
				return this._Theft__excluding_Motor_Vehicles_;
			}
			set
			{
				if ((this._Theft__excluding_Motor_Vehicles_ != value))
				{
					this.OnTheft__excluding_Motor_Vehicles_Changing(value);
					this.SendPropertyChanging();
					this._Theft__excluding_Motor_Vehicles_ = value;
					this.SendPropertyChanged("Theft__excluding_Motor_Vehicles_");
					this.OnTheft__excluding_Motor_Vehicles_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Road fatality]", Storage="_Road_fatality", DbType="Int NOT NULL")]
		public int Road_fatality
		{
			get
			{
				return this._Road_fatality;
			}
			set
			{
				if ((this._Road_fatality != value))
				{
					this.OnRoad_fatalityChanging(value);
					this.SendPropertyChanging();
					this._Road_fatality = value;
					this.SendPropertyChanged("Road_fatality");
					this.OnRoad_fatalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Road collision with injury]", Storage="_Road_collision_with_injury", DbType="Int NOT NULL")]
		public int Road_collision_with_injury
		{
			get
			{
				return this._Road_collision_with_injury;
			}
			set
			{
				if ((this._Road_collision_with_injury != value))
				{
					this.OnRoad_collision_with_injuryChanging(value);
					this.SendPropertyChanging();
					this._Road_collision_with_injury = value;
					this.SendPropertyChanged("Road_collision_with_injury");
					this.OnRoad_collision_with_injuryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quarter", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Quarter
		{
			get
			{
				return this._Quarter;
			}
			set
			{
				if ((this._Quarter != value))
				{
					this.OnQuarterChanging(value);
					this.SendPropertyChanging();
					this._Quarter = value;
					this.SendPropertyChanged("Quarter");
					this.OnQuarterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CrimeComment")]
	public partial class CrimeComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Latitude;
		
		private string _Longitude;
		
		private string _Suburb;
		
		private string _Comment;
		
		private System.DateTime _InputDateTime;
		
		private int _HashID;
		
		private EntitySet<CrimeTag> _CrimeTag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    partial void OnSuburbChanging(string value);
    partial void OnSuburbChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnInputDateTimeChanging(System.DateTime value);
    partial void OnInputDateTimeChanged();
    partial void OnHashIDChanging(int value);
    partial void OnHashIDChanged();
    #endregion
		
		public CrimeComment()
		{
			this._CrimeTag = new EntitySet<CrimeTag>(new Action<CrimeTag>(this.attach_CrimeTag), new Action<CrimeTag>(this.detach_CrimeTag));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="VarChar(15)")]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="VarChar(15)")]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suburb", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Suburb
		{
			get
			{
				return this._Suburb;
			}
			set
			{
				if ((this._Suburb != value))
				{
					this.OnSuburbChanging(value);
					this.SendPropertyChanging();
					this._Suburb = value;
					this.SendPropertyChanged("Suburb");
					this.OnSuburbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime InputDateTime
		{
			get
			{
				return this._InputDateTime;
			}
			set
			{
				if ((this._InputDateTime != value))
				{
					this.OnInputDateTimeChanging(value);
					this.SendPropertyChanging();
					this._InputDateTime = value;
					this.SendPropertyChanged("InputDateTime");
					this.OnInputDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HashID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HashID
		{
			get
			{
				return this._HashID;
			}
			set
			{
				if ((this._HashID != value))
				{
					this.OnHashIDChanging(value);
					this.SendPropertyChanging();
					this._HashID = value;
					this.SendPropertyChanged("HashID");
					this.OnHashIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CrimeComment_CrimeTag", Storage="_CrimeTag", ThisKey="HashID", OtherKey="HashID")]
		public EntitySet<CrimeTag> CrimeTag
		{
			get
			{
				return this._CrimeTag;
			}
			set
			{
				this._CrimeTag.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CrimeTag(CrimeTag entity)
		{
			this.SendPropertyChanging();
			entity.CrimeComment = this;
		}
		
		private void detach_CrimeTag(CrimeTag entity)
		{
			this.SendPropertyChanging();
			entity.CrimeComment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CrimeTag")]
	public partial class CrimeTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HashTag;
		
		private int _HashID;
		
		private int _HashTagID;
		
		private EntityRef<CrimeComment> _CrimeComment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHashTagChanging(string value);
    partial void OnHashTagChanged();
    partial void OnHashIDChanging(int value);
    partial void OnHashIDChanged();
    partial void OnHashTagIDChanging(int value);
    partial void OnHashTagIDChanged();
    #endregion
		
		public CrimeTag()
		{
			this._CrimeComment = default(EntityRef<CrimeComment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HashTag", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string HashTag
		{
			get
			{
				return this._HashTag;
			}
			set
			{
				if ((this._HashTag != value))
				{
					this.OnHashTagChanging(value);
					this.SendPropertyChanging();
					this._HashTag = value;
					this.SendPropertyChanged("HashTag");
					this.OnHashTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HashID", DbType="Int NOT NULL")]
		public int HashID
		{
			get
			{
				return this._HashID;
			}
			set
			{
				if ((this._HashID != value))
				{
					if (this._CrimeComment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHashIDChanging(value);
					this.SendPropertyChanging();
					this._HashID = value;
					this.SendPropertyChanged("HashID");
					this.OnHashIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HashTagID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HashTagID
		{
			get
			{
				return this._HashTagID;
			}
			set
			{
				if ((this._HashTagID != value))
				{
					this.OnHashTagIDChanging(value);
					this.SendPropertyChanging();
					this._HashTagID = value;
					this.SendPropertyChanged("HashTagID");
					this.OnHashTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CrimeComment_CrimeTag", Storage="_CrimeComment", ThisKey="HashID", OtherKey="HashID", IsForeignKey=true)]
		public CrimeComment CrimeComment
		{
			get
			{
				return this._CrimeComment.Entity;
			}
			set
			{
				CrimeComment previousValue = this._CrimeComment.Entity;
				if (((previousValue != value) 
							|| (this._CrimeComment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CrimeComment.Entity = null;
						previousValue.CrimeTag.Remove(this);
					}
					this._CrimeComment.Entity = value;
					if ((value != null))
					{
						value.CrimeTag.Add(this);
						this._HashID = value.HashID;
					}
					else
					{
						this._HashID = default(int);
					}
					this.SendPropertyChanged("CrimeComment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
